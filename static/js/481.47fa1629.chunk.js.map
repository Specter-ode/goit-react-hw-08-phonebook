{"version":3,"file":"static/js/481.47fa1629.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/FormTextField/FormTextField.module.css?ee7a","components/FormTextField/FormTextField.js","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/fields.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","services/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"FormTextField_block__MEJDx\",\"label\":\"FormTextField_label__lF6en\",\"input\":\"FormTextField_input__xOyRo\"};","import PropTypes from 'prop-types';\nimport { useMemo } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport s from './FormTextField.module.css';\n\nconst FormTextField = ({\n  label,\n  name,\n  value,\n  onChange,\n  required,\n  type,\n  placeholder,\n  title,\n  pattern,\n}) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={s.block}>\n      <input\n        className={s.input}\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required={required}\n        placeholder={placeholder}\n        type={type}\n        title={title}\n        pattern={pattern}\n      />\n      {label && (\n        <label className={s.label} htmlFor={id}>\n          {label}\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default FormTextField;\n\nFormTextField.defaultProps = {\n  type: 'text',\n  required: false,\n};\n\nFormTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  title: PropTypes.string,\n  pattern: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\",\"section\":\"Section_section__Z2PLw\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__ZK1ET\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"btn\":\"LoginForm_btn__B2KLK\"};","export const fields = {\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'email',\n    required: true,\n  },\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    required: true,\n  },\n};\n","import PropTypes from 'prop-types';\nimport s from './LoginForm.module.css';\nimport useForm from '../../services/hooks/useForm';\nimport FormTextField from 'components/FormTextField/FormTextField';\nimport Section from 'components/Section/Section';\nimport { fields } from './fields';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmitClick }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmitClick,\n    initialState,\n  });\n\n  const { email, password } = state;\n  const isActive = email && password;\n  return (\n    <Section title=\"Login form\">\n      <form className={s.form} onSubmit={handleSubmit}>\n        <FormTextField\n          value={email}\n          onChange={handleChange}\n          {...fields.email}\n        />\n        <FormTextField\n          value={password}\n          onChange={handleChange}\n          {...fields.password}\n        />\n        <button type=\"submit\" disabled={!isActive} className={s.btn}>\n          Submit\n        </button>\n      </form>\n    </Section>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmitClick: PropTypes.func.isRequired,\n};\nexport default LoginForm;\n","import s from './LoginPage.module.css';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLogin } from 'redux/auth/auth-selector';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { login } from '../../redux/auth/auth-operations';\nconst LoginPage = () => {\n  const isAuth = useSelector(isLogin);\n  const dispatch = useDispatch();\n\n  const onLogin = data => {\n    dispatch(login(data));\n    if (isAuth) {\n      return <Navigate to=\"/contacts\" />;\n    }\n  };\n\n  return (\n    <main>\n      <div className={s.container}>\n        <h3>\n          You are on the right way. To access to the phonebook you need to sign\n          in\n        </h3>\n        <LoginForm onSubmitClick={onLogin} />\n      </div>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","import { useState } from 'react';\n\nconst useForm = ({ onSubmitClick, initialState, clearFields = true }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmitClick({ ...state });\n\n    if (clearFields) {\n      setState({ ...initialState });\n    }\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["FormTextField","label","name","value","onChange","required","type","placeholder","title","pattern","id","useMemo","nanoid","className","s","htmlFor","defaultProps","children","fields","initialState","email","password","onSubmitClick","useForm","state","handleChange","handleSubmit","isActive","Section","onSubmit","disabled","isAuth","useSelector","isLogin","dispatch","useDispatch","data","login","to","clearFields","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}