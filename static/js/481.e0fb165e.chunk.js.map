{"version":3,"file":"static/js/481.e0fb165e.chunk.js","mappings":"qMACA,EAAwB,6BAAxB,EAA6D,6BAA7D,EAAkG,6B,SCI5FA,EAAgB,SAAC,GAAmF,IAAjFC,EAAgF,EAAhFA,MAAOC,EAAyE,EAAzEA,KAAMC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACnFC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,QAAU,IAEnC,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXJ,GAAIA,EACJR,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,KAAMA,EACNC,MAAOA,EACPC,QAASA,IAEVR,IACC,kBAAOY,UAAWC,EAASC,QAASL,EAApC,SACGT,QAOX,IAEAD,EAAcgB,aAAe,CAC3BT,KAAM,OACND,UAAU,I,qDClCZ,MAAwB,uBAAxB,EAAyD,yB,SCgBzD,MAdA,YAAuC,IAApBE,EAAmB,EAAnBA,MAAOS,EAAY,EAAZA,SACxB,OACE,qBAASJ,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,SAAyBN,IACxBS,O,kECNP,MAA4B,6B,oBCA5B,EAAuB,wBAAvB,EAAuH,uB,8BCD1GC,EACJ,CACLjB,MAAO,QACPC,KAAM,QACNK,KAAM,QACND,UAAU,GALDY,EAOD,CACRjB,MAAO,WACPC,KAAM,WACNK,KAAM,WACND,UAAU,G,SCJRa,EAAe,CACnBjB,KAAM,GACNkB,MAAO,GACPC,SAAU,IAwBZ,EArBkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CAAED,cAAAA,EAAeH,aAAAA,IAA/DK,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAErBN,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SACTM,EAAWP,GAASC,EAC1B,OACE,SAACO,EAAA,EAAD,CAASpB,MAAM,aAAf,UACE,kBAAMK,UAAWC,EAAQe,SAAUH,EAAnC,WACE,SAAC1B,EAAA,GAAD,QAAeG,MAAOiB,EAAOhB,SAAUqB,GAAkBP,KACzD,SAAClB,EAAA,GAAD,QAAeG,MAAOkB,EAAUjB,SAAUqB,GAAkBP,KAC5D,mBAAQX,KAAK,SAASuB,UAAWH,EAAUd,UAAWC,EAAtD,0B,UCHR,EAfkB,WAChB,IAAMiB,GAAWC,EAAAA,EAAAA,MAIjB,OACE,2BACE,iBAAKnB,UAAWC,EAAhB,WACE,wCACA,SAAC,EAAD,CAAWQ,cAPD,SAAAW,GACdF,GAASG,EAAAA,EAAAA,GAAMD,c,gECkBnB,IAxBgB,SAAC,GAAyD,IAAvDX,EAAsD,EAAtDA,cAAeH,EAAuC,EAAvCA,aAAuC,IAAzBgB,YAAAA,OAAyB,SACvE,GAA0BC,EAAAA,EAAAA,WAAS,UAAKjB,IAAxC,eAAOK,EAAP,KAAca,EAAd,KAoBA,MAAO,CAAEb,MAAAA,EAAOa,SAAAA,EAAUZ,aAlBL,SAAC,GAAgB,IAAda,EAAa,EAAbA,OACdpC,EAA+BoC,EAA/BpC,KAAMC,EAAyBmC,EAAzBnC,MAAOI,EAAkB+B,EAAlB/B,KAAMgC,EAAYD,EAAZC,QACrBC,EAAoB,aAATjC,EAAsBgC,EAAUpC,EACjDkC,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEfvC,EAAOsC,QAa4Bd,aATnB,SAAAgB,GACnBA,EAAEC,iBACFrB,GAAc,UAAKE,IAEfW,GACFE,GAAS,UAAKlB","sources":["webpack://goit-react-hw-08-phonebook/./src/components/FormTextField/FormTextField.module.css?ee7a","components/FormTextField/FormTextField.js","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/fields.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","services/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"FormTextField_block__MEJDx\",\"label\":\"FormTextField_label__lF6en\",\"input\":\"FormTextField_input__xOyRo\"};","import { useMemo } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport s from './FormTextField.module.css';\n\nconst FormTextField = ({ label, name, value, onChange, placeholder, required, type, title, pattern }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={s.block}>\n      <input\n        className={s.input}\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={required}\n        type={type}\n        title={title}\n        pattern={pattern}\n      />\n      {label && (\n        <label className={s.label} htmlFor={id}>\n          {label}\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default FormTextField;\n\nFormTextField.defaultProps = {\n  type: 'text',\n  required: false,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\",\"section\":\"Section_section__Z2PLw\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__ZK1ET\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"btn\":\"LoginForm_btn__B2KLK\"};","export const fields = {\n  email: {\n    label: 'Email',\n    name: 'email',\n    type: 'email',\n    required: true,\n  },\n  password: {\n    label: 'Password',\n    name: 'password',\n    type: 'password',\n    required: true,\n  },\n};\n","import PropTypes from 'prop-types';\nimport s from './LoginForm.module.css';\nimport useForm from '../../services/hooks/useForm';\nimport FormTextField from 'components/FormTextField/FormTextField';\nimport Section from 'components/Section/Section';\nimport { fields } from './fields';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmitClick }) => {\n  const { state, handleChange, handleSubmit } = useForm({ onSubmitClick, initialState });\n\n  const { email, password } = state;\n  const isActive = email && password;\n  return (\n    <Section title=\"Login form\">\n      <form className={s.form} onSubmit={handleSubmit}>\n        <FormTextField value={email} onChange={handleChange} {...fields.email} />\n        <FormTextField value={password} onChange={handleChange} {...fields.password} />\n        <button type=\"submit\" disabled={!isActive} className={s.btn}>\n          Submit\n        </button>\n      </form>\n    </Section>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmitClick: PropTypes.func.isRequired,\n};\nexport default LoginForm;\n","import s from './LoginPage.module.css';\nimport { useDispatch } from 'react-redux';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { login } from '../../redux/auth/auth-operations';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n  return (\n    <main>\n      <div className={s.container}>\n        <h2>Login Page</h2>\n        <LoginForm onSubmitClick={onLogin} />\n      </div>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","import { useState } from 'react';\n\nconst useForm = ({ onSubmitClick, initialState, clearFields = true }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmitClick({ ...state });\n\n    if (clearFields) {\n      setState({ ...initialState });\n    }\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["FormTextField","label","name","value","onChange","placeholder","required","type","title","pattern","id","useMemo","nanoid","className","s","htmlFor","defaultProps","children","fields","initialState","email","password","onSubmitClick","useForm","state","handleChange","handleSubmit","isActive","Section","onSubmit","disabled","dispatch","useDispatch","data","login","clearFields","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}